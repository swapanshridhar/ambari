***************
*** 78,139 ****
      listInvocations.add(new ServiceTestInvocation(Request.Type.GET, clusterService, m, args, null));
  
      //createCluster
-     clusterService = new TestClusterService(clusters, "clusterName");
-     m = clusterService.getClass().getMethod("createCluster", String.class, HttpHeaders.class, UriInfo.class, String.class);
      args = new Object[] {"body", getHttpHeaders(), getUriInfo(), "clusterName"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.POST, clusterService, m, args, "body"));
  
      //updateCluster
-     clusterService = new TestClusterService(clusters, "clusterName");
-     m = clusterService.getClass().getMethod("updateCluster", String.class, HttpHeaders.class, UriInfo.class, String.class);
      args = new Object[] {"body", getHttpHeaders(), getUriInfo(), "clusterName"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.PUT, clusterService, m, args, "body"));
  
      //deleteCluster
-     clusterService = new TestClusterService(clusters, "clusterName");
-     m = clusterService.getClass().getMethod("deleteCluster", HttpHeaders.class, UriInfo.class, String.class);
      args = new Object[] {getHttpHeaders(), getUriInfo(), "clusterName"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE, clusterService, m, args, null));
  
      //createArtifact
-     clusterService = new TestClusterService(clusters, "clusterName");
-     m = clusterService.getClass().getMethod("createArtifact", String.class, HttpHeaders.class, UriInfo.class, String.class, String.class);
      args = new Object[] {"body", getHttpHeaders(), getUriInfo(), "clusterName", "artifactName"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.POST, clusterService, m, args, "body"));
  
      //getArtifact
-     clusterService = new TestClusterService(clusters, "clusterName");
-     m = clusterService.getClass().getMethod("getArtifact", String.class, HttpHeaders.class, UriInfo.class, String.class, String.class);
      args = new Object[] {"body", getHttpHeaders(), getUriInfo(), "clusterName", "artifact_name"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.GET, clusterService, m, args, "body"));
  
      //getArtifacts
-     clusterService = new TestClusterService(clusters, "clusterName");
-     m = clusterService.getClass().getMethod("getArtifacts", String.class, HttpHeaders.class, UriInfo.class, String.class);
      args = new Object[] {"body", getHttpHeaders(), getUriInfo(), "clusterName"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.GET, clusterService, m, args, "body"));
  
      //updateArtifact
-     clusterService = new TestClusterService(clusters, "clusterName");
-     m = clusterService.getClass().getMethod("updateArtifact", String.class, HttpHeaders.class, UriInfo.class, String.class, String.class);
      args = new Object[] {"body", getHttpHeaders(), getUriInfo(), "clusterName", "artifactName"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.PUT, clusterService, m, args, "body"));
  
      //updateArtifacts
-     clusterService = new TestClusterService(clusters, "clusterName");
-     m = clusterService.getClass().getMethod("updateArtifacts", String.class, HttpHeaders.class, UriInfo.class, String.class);
      args = new Object[] {"body", getHttpHeaders(), getUriInfo(), "clusterName"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.PUT, clusterService, m, args, "body"));
  
      //deleteArtifact
-     clusterService = new TestClusterService(clusters, "clusterName");
-     m = clusterService.getClass().getMethod("deleteArtifact", String.class, HttpHeaders.class, UriInfo.class, String.class, String.class);
      args = new Object[] {"body", getHttpHeaders(), getUriInfo(), "clusterName", "artifactName"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE, clusterService, m, args, "body"));
  
      //deleteArtifacts
-     clusterService = new TestClusterService(clusters, "clusterName");
-     m = clusterService.getClass().getMethod("deleteArtifacts", String.class, HttpHeaders.class, UriInfo.class, String.class);
      args = new Object[] {"body", getHttpHeaders(), getUriInfo(), "clusterName"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE, clusterService, m, args, "body"));
  
--- 78,139 ----
      listInvocations.add(new ServiceTestInvocation(Request.Type.GET, clusterService, m, args, null));
  
      //createCluster
+     clusterService = new TestClusterService(clusters, 1L);
+     m = clusterService.getClass().getMethod("createCluster", String.class, HttpHeaders.class, UriInfo.class);
      args = new Object[] {"body", getHttpHeaders(), getUriInfo(), "clusterName"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.POST, clusterService, m, args, "body"));
  
      //updateCluster
+     clusterService = new TestClusterService(clusters, 1L);
+     m = clusterService.getClass().getMethod("updateCluster", String.class, HttpHeaders.class, UriInfo.class, Long.class);
      args = new Object[] {"body", getHttpHeaders(), getUriInfo(), "clusterName"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.PUT, clusterService, m, args, "body"));
  
      //deleteCluster
+     clusterService = new TestClusterService(clusters, 1L);
+     m = clusterService.getClass().getMethod("deleteCluster", HttpHeaders.class, UriInfo.class, Long.class);
      args = new Object[] {getHttpHeaders(), getUriInfo(), "clusterName"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE, clusterService, m, args, null));
  
      //createArtifact
+     clusterService = new TestClusterService(clusters, 1L);
+     m = clusterService.getClass().getMethod("createArtifact", String.class, HttpHeaders.class, UriInfo.class, Long.class, String.class);
      args = new Object[] {"body", getHttpHeaders(), getUriInfo(), "clusterName", "artifactName"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.POST, clusterService, m, args, "body"));
  
      //getArtifact
+     clusterService = new TestClusterService(clusters, 1L);
+     m = clusterService.getClass().getMethod("getArtifact", String.class, HttpHeaders.class, UriInfo.class, Long.class, String.class);
      args = new Object[] {"body", getHttpHeaders(), getUriInfo(), "clusterName", "artifact_name"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.GET, clusterService, m, args, "body"));
  
      //getArtifacts
+     clusterService = new TestClusterService(clusters, 1L);
+     m = clusterService.getClass().getMethod("getArtifacts", String.class, HttpHeaders.class, UriInfo.class, Long.class);
      args = new Object[] {"body", getHttpHeaders(), getUriInfo(), "clusterName"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.GET, clusterService, m, args, "body"));
  
      //updateArtifact
+     clusterService = new TestClusterService(clusters, 1L);
+     m = clusterService.getClass().getMethod("updateArtifact", String.class, HttpHeaders.class, UriInfo.class, Long.class, String.class);
      args = new Object[] {"body", getHttpHeaders(), getUriInfo(), "clusterName", "artifactName"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.PUT, clusterService, m, args, "body"));
  
      //updateArtifacts
+     clusterService = new TestClusterService(clusters, 1L);
+     m = clusterService.getClass().getMethod("updateArtifacts", String.class, HttpHeaders.class, UriInfo.class, Long.class);
      args = new Object[] {"body", getHttpHeaders(), getUriInfo(), "clusterName"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.PUT, clusterService, m, args, "body"));
  
      //deleteArtifact
+     clusterService = new TestClusterService(clusters, 1L);
+     m = clusterService.getClass().getMethod("deleteArtifact", String.class, HttpHeaders.class, UriInfo.class, Long.class, String.class);
      args = new Object[] {"body", getHttpHeaders(), getUriInfo(), "clusterName", "artifactName"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE, clusterService, m, args, "body"));
  
      //deleteArtifacts
+     clusterService = new TestClusterService(clusters, 1L);
+     m = clusterService.getClass().getMethod("deleteArtifacts", String.class, HttpHeaders.class, UriInfo.class, Long.class);
      args = new Object[] {"body", getHttpHeaders(), getUriInfo(), "clusterName"};
      listInvocations.add(new ServiceTestInvocation(Request.Type.DELETE, clusterService, m, args, "body"));
  
***************
*** 142,163 ****
  
  
    private class TestClusterService extends ClusterService {
-     private String m_clusterId;
  
-     private TestClusterService(Clusters clusters, String clusterId) {
        super(ApiVersion.Default, clusters);
        m_clusterId = clusterId;
      }
  
      @Override
-     ResourceInstance createClusterResource(String clusterName) {
-       assertEquals(m_clusterId, clusterName);
        return getTestResource();
      }
  
      @Override
-     ResourceInstance createArtifactResource(String clusterName, String artifactName) {
-       assertEquals(m_clusterId, clusterName);
        return getTestResource();
      }
  
--- 142,163 ----
  
  
    private class TestClusterService extends ClusterService {
+     private Long m_clusterId;
  
+     private TestClusterService(Clusters clusters, Long clusterId) {
        super(ApiVersion.Default, clusters);
        m_clusterId = clusterId;
      }
  
      @Override
+     ResourceInstance createClusterResource(Long clusterId) {
+       assertEquals(m_clusterId, clusterId);
        return getTestResource();
      }
  
      @Override
+     ResourceInstance createArtifactResource(Long clusterId, String artifactName) {
+       assertEquals(m_clusterId, clusterId);
        return getTestResource();
      }
  
