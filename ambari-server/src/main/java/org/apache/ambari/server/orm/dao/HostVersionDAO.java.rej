***************
*** 132,147 ****
    /**
     * Retrieve all of the host versions for the given cluster name, host name, and state. <br/>
     * Consider using faster method: {@link HostVersionDAO#findByClusterHostAndState(long, long, org.apache.ambari.server.state.RepositoryVersionState)}
-    * @param clusterName Cluster name
     * @param hostName FQDN of host
     * @param state repository version state
     * @return Return all of the host versions that match the criteria.
     */
    @RequiresSession
-   public List<HostVersionEntity> findByClusterHostAndState(String  clusterName, String hostName, RepositoryVersionState state) {
      final TypedQuery<HostVersionEntity> query = entityManagerProvider.get()
          .createNamedQuery("hostVersionByClusterHostnameAndState", HostVersionEntity.class);
-     query.setParameter("clusterName", clusterName);
      query.setParameter("hostName", hostName);
      query.setParameter("state", state);
  
--- 132,147 ----
    /**
     * Retrieve all of the host versions for the given cluster name, host name, and state. <br/>
     * Consider using faster method: {@link HostVersionDAO#findByClusterHostAndState(long, long, org.apache.ambari.server.state.RepositoryVersionState)}
+    * @param clusterId Cluster name
     * @param hostName FQDN of host
     * @param state repository version state
     * @return Return all of the host versions that match the criteria.
     */
    @RequiresSession
+   public List<HostVersionEntity> findByClusterHostAndState(Long  clusterId, String hostName, RepositoryVersionState state) {
      final TypedQuery<HostVersionEntity> query = entityManagerProvider.get()
          .createNamedQuery("hostVersionByClusterHostnameAndState", HostVersionEntity.class);
+     query.setParameter("clusterId", clusterId);
      query.setParameter("hostName", hostName);
      query.setParameter("state", state);
  
***************
*** 149,155 ****
    }
  
    /**
-    * Faster version of {@link HostVersionDAO#findByClusterHostAndState(java.lang.String, java.lang.String, org.apache.ambari.server.state.RepositoryVersionState)}
     *
     * @param clusterId Cluster ID
     * @param hostId Host ID
--- 149,155 ----
    }
  
    /**
+    * Faster version of
     *
     * @param clusterId Cluster ID
     * @param hostId Host ID
***************
*** 173,186 ****
     * for the given host.
     * Consider using faster method {@link HostVersionDAO#findByHostAndStateCurrent(long, long)}
     *
-    * @param clusterName Cluster name
     * @param hostName Host name
     * @return Returns the single host version for this host whose state is {@link org.apache.ambari.server.state.RepositoryVersionState#CURRENT}, or {@code null} otherwise.
     */
    @RequiresSession
-   public HostVersionEntity findByHostAndStateCurrent(String clusterName, String hostName) {
      try {
-       List<?> results = findByClusterHostAndState(clusterName, hostName, RepositoryVersionState.CURRENT);
        if (results.isEmpty()) {
          return null;
        } else {
--- 173,186 ----
     * for the given host.
     * Consider using faster method {@link HostVersionDAO#findByHostAndStateCurrent(long, long)}
     *
+    * @param clusterId Cluster name
     * @param hostName Host name
     * @return Returns the single host version for this host whose state is {@link org.apache.ambari.server.state.RepositoryVersionState#CURRENT}, or {@code null} otherwise.
     */
    @RequiresSession
+   public HostVersionEntity findByHostAndStateCurrent(Long clusterId, String hostName) {
      try {
+       List<?> results = findByClusterHostAndState(clusterId, hostName, RepositoryVersionState.CURRENT);
        if (results.isEmpty()) {
          return null;
        } else {
***************
*** 197,203 ****
    /**
     * Retrieve the single host version whose state is {@link org.apache.ambari.server.state.RepositoryVersionState#CURRENT}, of which there should be exactly one at all times
     * for the given host.
-    * Faster version of {@link HostVersionDAO#findByHostAndStateCurrent(java.lang.String, java.lang.String)}
     * @param clusterId Cluster ID
     * @param hostId host ID
     * @return Returns the single host version for this host whose state is {@link org.apache.ambari.server.state.RepositoryVersionState#CURRENT}, or {@code null} otherwise.
--- 197,203 ----
    /**
     * Retrieve the single host version whose state is {@link org.apache.ambari.server.state.RepositoryVersionState#CURRENT}, of which there should be exactly one at all times
     * for the given host.
+    * Faster version of
     * @param clusterId Cluster ID
     * @param hostId host ID
     * @return Returns the single host version for this host whose state is {@link org.apache.ambari.server.state.RepositoryVersionState#CURRENT}, or {@code null} otherwise.
***************
*** 194,200 ****
    }
  
    /**
-    * Optimized version of {@link HostVersionDAO#findByClusterStackVersionAndHost(java.lang.String, org.apache.ambari.server.state.StackId, java.lang.String, java.lang.String)}
     * @param clusterId Id of cluster
     * @param stackId Stack ID (e.g., HDP-2.2)
     * @param version Stack version (e.g., 2.2.0.1-995)
--- 194,200 ----
    }
  
    /**
+    * Optimized version of
     * @param clusterId Id of cluster
     * @param stackId Stack ID (e.g., HDP-2.2)
     * @param version Stack version (e.g., 2.2.0.1-995)
